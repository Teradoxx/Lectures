# Use Ubuntu as the base image
FROM ubuntu:latest

# Install necessary packages
RUN apt-get update && apt-get install -y \
    openssh-server \
    apache2 \
    php \
    php-mysql \
    mariadb-server \
    gobuster \
    fail2ban \
    && rm -rf /var/lib/apt/lists/*

# Set up SSH access
RUN mkdir -p /var/run/sshd
RUN echo 'root:password' | chpasswd
RUN sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config

# Fix Apache's ServerName issue
RUN echo "ServerName localhost" >> /etc/apache2/apache2.conf

# Setup vulnerable web files
RUN mkdir -p /var/www/html/backup
RUN echo "<?php \$db_user='admin'; \$db_pass='password123'; ?>" > /var/www/html/backup/db_config.php.bak
RUN echo "FLAG{CTF_SUCCESS}" > /var/www/html/backup/flag.txt

# Set weak permissions for challenge purposes
RUN chmod 777 /var/www/html/backup/db_config.php.bak
RUN chmod 777 /var/www/html/backup/flag.txt

# Ensure MariaDB user exists before modifying permissions
RUN id mysql || useradd -r -s /bin/false mysql && \
    chown -R mysql:mysql /var/lib/mysql

# Ensure MariaDB socket directory exists
RUN mkdir -p /run/mysqld && \
    chown -R mysql:mysql /run/mysqld

# Copy MySQL initialization script
COPY init.sql /docker-entrypoint-initdb.d/

# Copy and set executable permissions for the entrypoint script
COPY entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# Expose SSH, Web, and MySQL ports
EXPOSE 22 80 3306

# Start services using the entrypoint script
CMD ["/entrypoint.sh"]
